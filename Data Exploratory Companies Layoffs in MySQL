-- Exploratory Data Analysis

SELECT *
FROM layoffs_staging4;

SELECT company, SUM(total_laid_off)
FROM layoffs_staging4
GROUP BY company
ORDER BY 2 DESC;

-- Total laid off by all companies each year
SELECT YEAR(date), SUM(total_laid_off)
FROM layoffs_staging4
GROUP BY YEAR(date)
ORDER BY 1 DESC;

-- Total laid off and rolling total by all companies each month
WITH Rolling_Total AS
(
SELECT SUBSTRING(date, 1, 7) AS MONTH, SUM(total_laid_off) AS total_off
FROM layoffs_staging4
WHERE SUBSTRING(date, 1, 7) IS NOT NULL
GROUP BY MONTH
ORDER BY 1 ASC
)
SELECT MONTH, total_off, SUM(total_off) OVER (ORDER BY MONTH) AS rolling_total_off
FROM Rolling_Total;

-- Top 5 Ranking based on total_laid_off
SELECT company, YEAR(date), SUM(total_laid_off)
FROM layoffs_staging4
GROUP BY company, YEAR(date)
ORDER BY 3 DESC;

WITH company_year (company, years, total_laid_off) AS
(
	SELECT company, YEAR(date), SUM(total_laid_off)
	FROM layoffs_staging4
	GROUP BY company, YEAR(date)
	ORDER BY 3 DESC
), company_rank AS
(
SELECT *,
DENSE_RANK() OVER (PARTITION BY years ORDER BY total_laid_off DESC) AS Ranking
FROM company_year
WHERE years IS NOT NULL
)
SELECT *
FROM company_rank
WHERE ranking > 5 AND ranking <= 10;

-- Maximum funds raised by companies within each industry
SELECT industry, YEAR(date), MAX(funds_raised_millions)
FROM layoffs_staging4
GROUP BY industry, YEAR(date)
ORDER BY 3 DESC;

WITH company_funds_raised_yearly(industry, years, funds_raised_millions) AS
(
	SELECT industry, YEAR(date), MAX(funds_raised_millions)
	FROM layoffs_staging4
	GROUP BY industry, YEAR(date)
	ORDER BY 3 DESC
), company_funds_raised_ranking AS
(
	SELECT *,
    DENSE_RANK() OVER (PARTITION BY years ORDER BY funds_raised_millions DESC) AS company_ranking
    FROM company_funds_raised_yearly
)
SELECT *
FROM company_funds_raised_ranking
WHERE company_ranking <= 5 AND years IS NOT NULL;
